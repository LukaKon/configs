global:
  logging:
    - type: "stdout"
      level: "error"
      format: "human"
    - type: "syslog"
      level: "info"
      format: "human"

jobs:
# this job takes care of snapshot creation + pruning
  - name: snapjob
    type: snap
    filesystems: {
      "rpool<": true,
      "rpool/swap": false,
      "data<": true,
      "store<": true,
      "tank<": true,
      }
    snapshotting:
      type: periodic
      interval: 45m
      prefix: zrepl_
      timestamp_format: human
    pruning:
      keep:
      - type: grid
        grid: 1x1h(keep=all) | 3x1h | 7x1d
        regex: "^zrepl_.*"
      - type: regex
        negate: true
        regex: "^zrepl_.*"

  - name: push_rpool_to_bck
    type: push
    connect:
      type: local
      listener_name: bck_sink_omni
      client_identity: omni
    filesystems: {
      "rpool<": true,
      "rpool/swap": false,
      }
    send:
      encrypted: false
    snapshotting:
      prefix: zrepl_rpool_
      type: periodic
      interval: 20m
      timestamp_format: human
    replication:
      protection:
        initial: guarantee_resumability
        incremental: guarantee_incremental
    pruning:
      keep_sender:
      - type: regex
        regex: ".*"
      # retain 
      keep_receiver:
      - type: grid
        grid: 1x1h(keep=all) | 3x1h | 7x1d
        regex: "^zrepl_.*"
      - type: regex
        negate: true
        regex: "^zrepl_.*"

  - name: bck_sink_omni
    type: sink
    root_fs: "backup/omni"
    serve:
      type: local
      listener_name: bck_sink_omni

  - name: push_data_to_bck
    type: push
    connect:
      type: local
      listener_name: bck_sink_data
      client_identity: omni
    filesystems: {
      "data<": true,
      "data/iso": false,
      "data/export": false,
      }
    send:
      encrypted: false
    snapshotting:
      # type: manual
      prefix: zrepl_data_
      type: periodic
      interval: 10m
      timestamp_format: human
    replication:
      protection:
        initial: guarantee_resumability
        incremental: guarantee_incremental
    pruning:
      keep_sender:
      - type: regex
        regex: ".*"
      keep_receiver:
      - type: grid
        grid: 1x1h(keep=all) | 3x1h(keep=1) | 7x1d(keep=2)
        regex: "^zrepl_.*"
      - type: regex
        negate: true
        regex: "^zrepl_.*"

  - name: bck_sink_data
    type: sink
    root_fs: "backup/data"
    serve:
      type: local
      listener_name: bck_sink_data

  - name: push_store_to_bck
    type: push
    connect:
      type: local
      listener_name: bck_sink_store
      client_identity: omni
    filesystems: {
      "store<": true,
      "store/media/music<": false
      }
    send:
      encrypted: false
    snapshotting:
      prefix: zrepl_store_
      # type: manual
      type: periodic
      interval: 20m
      timestamp_format: human
    replication:
      protection:
        initial: guarantee_resumability
        incremental: guarantee_incremental
    pruning:
      keep_sender:
      - type: regex
        regex: ".*"
      keep_receiver:
      - type: grid
        grid: 1x1h(keep=all) | 3x1h(keep=1) | 10x1d(keep=1)
        regex: "^zrepl_.*"
      - type: regex
        negate: true
        regex: "^zrepl_.*"

  - name: bck_sink_store
    type: sink
    root_fs: "backup/store"
    serve:
      type: local
      listener_name: bck_sink_store

  - name: push_tank_to_bck
    type: push
    connect:
      type: local
      listener_name: bck_sink_tank
      client_identity: omni
    filesystems: {
      "tank<": true,
      }
    send:
      encrypted: false
    snapshotting:
      prefix: zrepl_tank_
      # type: manual
      type: periodic
      interval: 1h
      timestamp_format: human
    replication:
      protection:
        initial: guarantee_resumability
        incremental: guarantee_incremental
    pruning:
      keep_sender:
      - type: regex
        regex: ".*"
      keep_receiver:
      - type: grid
        grid: 1x1h(keep=all) | 1x1h | 1x1d(keep=1)
        regex: "^zrepl_.*"
      - type: regex
        negate: true
        regex: "^zrepl_.*"

  - name: bck_sink_tank
    type: sink
    root_fs: "backup/tank"
    serve:
      type: local
      listener_name: bck_sink_tank
